openapi: 3.0.0
info:
  description: "Person and relations"
  version: 0.0.1
  title: Тестовое задание
tags:
  - name: persons
    description: Information about person and family
  - name: relation_types
    description: Information about different types of relations
    
paths:
  /persons:
    get:
      tags:
      - persons
      summary: Finds persons
      description: Multiple status values can be provided with comma separated strings
      parameters:
        - name: is_alive
          in: query
          description: Filter by life status
          required: false
          schema:
            type: boolean
        - name: place_code
          in: query
          description: Filter by place of living. Fias code is expected
          required: false
          schema:
            type: string            
          
      responses:
        "200":
          description: successful operation
          content:
        
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Person"
        "400":
          description: Invalid status value 
          
  /persons/{id}/relations:
    get:
      tags:
      - persons
      summary: Find relatives
      description: Find relatives
      parameters:
        - name: id
          in: path
          description: person_id
          required: true
          schema:
            type: integer
        - name: person[is_alive]
          in: query
          description: Filter by life status
          required: false
          schema:
            type: boolean
        - name: person[place_code]
          in: query
          description: Filter by place of living. Fias code is expected
          required: false
          schema:
            type: string
        - name: relation_type_id
          in: query
          description: Filter by relation type
          required: false
          schema:
            type: array
            items: 
              type: integer
              description: RelationType_id
  
      responses:
        "200":
          description: successful operation
          content:
        
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Relation"
        "400":
          description: Invalid status value 
          
  /relation_types:
    get:
      tags:
      - relation_types
      summary: Relation types
      description: Find types of relations        
      responses:
        "200":
          description: successful operation
          content:
        
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RelationType"
        "400":
          description: Invalid status value 
      
servers:
  - url: https://petstore.swagger.io/v2
  
components:

  schemas:
    Person:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        is_alive:
          type: boolean
        place_code:
          type: string
          description: code from FIAS
      
    Relation:
      type: object
      properties: 
        person:
          $ref: "#/components/schemas/Person"
        relation_type:
          $ref: "#/components/schemas/RelationType"  
          
    RelationType:
      type: object
      properties: 
        id:
          type: integer
        name: 
          type: string
        code: 
          type: string
      